@model PersonalBlog.Areas.Admin.Models.Gallery

@{
                /**/

                /**/

                ViewBag.Title = "Edit";
                Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<script src="/Transliteration/jsapi.js" type="text/javascript"></script>
<script type="text/javascript">

    // Load the Google Transliterate API
    google.load("elements", "1", {
        packages: "transliteration"
    });

    function onLoad() {
        var options = {
            sourceLanguage:
                google.elements.transliteration.LanguageCode.ENGLISH,
            destinationLanguage:
                [google.elements.transliteration.LanguageCode.NEPALI],
            shortcutKey: 'ctrl+g',
            transliterationEnabled: true
        };

        // Create an instance on TransliterationControl with the required
        // options.
        var control =
            new google.elements.transliteration.TransliterationControl(options);

        // Enable transliteration in the textbox with id
        // 'transliterateTextarea'.
        control.makeTransliteratable(["name"]);
        control.makeTransliteratable(["caption"]);

    }
    google.setOnLoadCallback(onLoad);
</script>
<script src="/Transliteration/transliteration.js" type="text/javascript"></script>
<link href="/Transliteration/transliteration.css" rel="stylesheet" />
<script src="/Transliteration/transliteration.I.js" type="text/javascript"></script>


@using (Html.BeginForm("Edit", "Galleries", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Imagepath);
    <label>Ctrl+g for unicode</label>
    <div class="form-row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control", id = "caption" } })
                @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-2">Thumbnail</label>

                <input type="file" name="Thumbnail" class="form-control" />
                @Html.ValidationMessageFor(model => model.Imagepath, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label class="control-label col-md-2">Images</label>

                <input type="file" name="Images" class="form-control" multiple />
                @Html.ValidationMessageFor(model => model.Imagepath, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

            </div>
        </div>
    </div>
}


